name: Deploy Supabase

on:
  push:
    branches: [main]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/functions/**'
      - 'supabase/config.toml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Vincular ao projeto Supabase
        run: supabase link --project-ref $SUPABASE_PROJECT_ID

      - name: Listar migrações locais
        run: |
          echo "Migrações locais:"
          ls -la supabase/migrations || echo "Diretório de migrações vazio ou não existe"

      - name: Verificar status do banco de dados
        run: supabase db remote status --db-url $SUPABASE_DB_URL || echo "Não foi possível verificar o status remoto"

      - name: Pull migrações remotas
        run: supabase db pull --db-url $SUPABASE_DB_URL
        continue-on-error: true

      - name: Reparar tabela de migrações
        run: |
          # Tentar reparar migrações com problemas usando a migration mais recente
          LATEST_MIGRATION=$(ls -t supabase/migrations | head -1 || echo "")
          if [ ! -z "$LATEST_MIGRATION" ]; then
            echo "Tentando reparar com a migração mais recente: $LATEST_MIGRATION"
            supabase migration repair --status reverted --db-url $SUPABASE_DB_URL || echo "Reparo não necessário"
          else
            echo "Nenhuma migração encontrada para reparar"
          fi
        continue-on-error: true

      - name: Aplicar migrações do banco de dados
        run: |
          # Tenta aplicar as migrações com include-all para ignorar avisos de migração
          echo "$SUPABASE_DB_PASSWORD" | supabase db push --db-url $SUPABASE_DB_URL --include-all --password-stdin
        
      - name: Deploy das Edge Functions
        run: supabase functions deploy --project-ref $SUPABASE_PROJECT_ID

      - name: Verificar status
        run: supabase status

      - name: Notificar conclusão
        run: echo "✅ Deploy concluído com sucesso!"
